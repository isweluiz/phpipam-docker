apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: mysql-rotate-backup
  namespace: phpipam
  labels:
    app.kubernetes.io/name: phpipam
    app.kubernetes.io/instance: my-phpipam
    app.kubernetes.io/component: phpipam-db-utils
spec:
  schedule: "*/10 * * * *"
  concurrencyPolicy: Forbid
  startingDeadlineSeconds: 600
  jobTemplate:
    metadata:
      labels:
        app.kubernetes.io/name: phpipam
        app.kubernetes.io/instance: my-phpipam
        app.kubernetes.io/component: phpipam-db-utils
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/name: phpipam
            app.kubernetes.io/instance: my-phpipam
            app.kubernetes.io/component: phpipam-db-utils
        spec:
          containers:
          - image: docker.io/busybox:1.30.1
            imagePullPolicy: IfNotPresent
            name: rotate-backups-files
            env:
            - name: MYSQL_BACKUPS_ROTATION
              valueFrom:
                configMapKeyRef:
                  name: phpipam-env
                  key: PHPIPAM_MYSQL_BACKUP_ROTATION
            command: ["/bin/sh"]
            args:
              - -c
              - ls -1d | tail -n +$(($MYSQL_BACKUPS_ROTATION+1)) | xargs --no-run-if-empty rm
            resources:
              requests:
                cpu: 10m
                memory: 10Mi
              limits:
                cpu: 200m
                memory: 200Mi
            volumeMounts:
            - name: mariadb-backup-persistent-storage
              mountPath: /backup
          nodeSelector:
            beta.kubernetes.io/arch: amd64
          restartPolicy: Never
          volumes:
          - name: mariadb-backup-persistent-storage
            persistentVolumeClaim:
              claimName: phpipam-backup-db-pv-claim
