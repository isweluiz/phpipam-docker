---
kind: Namespace
apiVersion: v1
metadata:
  name: phpipam
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: phpipam-nginx-conf
  namespace: phpipam
data:
  default.conf: |
    # inspired by official sample
    # https://phpipam.net/news/phpipam-on-nginx/

    server {
        # root directory
        root   /var/www/html;

        # phpipam
        location / {
            try_files $uri $uri/ =404;
            index index.php;

            error_page 500 /app/error/index.php;
            error_page 404 /app/error/index.php;
            error_page 403 /app/error/index.php;

            rewrite ^/login/dashboard/?$ /dashboard/ redirect;
            rewrite ^/logout/dashboard/?$ /dashboard/ redirect;
            rewrite ^/tools/search/(.*)/(.*)/(.*)/(.*)/([^/]+)$ /index.php?page=tools§ion=search&addresses=$1&subnets=$2&vlans=$3&vrf=$4&ip=$5 last;
            rewrite ^/tools/search/(.*) /index.php?page=tools§ion=search&ip=$1 last;
            rewrite ^/(.*)/(.*)/(.*)/(.*)/(.*)/([^/]+)/? /index.php?page=$1§ion=$2&subnetId=$3&sPage=$4&ipaddrid=$5&tab=$6 last;
            rewrite ^/(.*)/(.*)/(.*)/(.*)/([^/]+)/? /index.php?page=$1§ion=$2&subnetId=$3&sPage=$4&ipaddrid=$5 last;
            rewrite ^/(.*)/(.*)/(.*)/([^/]+)/? /index.php?page=$1§ion=$2&subnetId=$3&sPage=$4 last;
            rewrite ^/(.*)/(.*)/([^/]+)/? /index.php?page=$1§ion=$2&subnetId=$3 last;
            rewrite ^/(.*)/([^/]+)/? /index.php?page=$1§ion=$2 last;
            rewrite ^/([^/]+)/? /index.php?page=$1 last;
        }
        # phpipam - api
        location /api {
            rewrite ^/api/(.*)/(.*)/(.*)/(.*)/(.*) /api/index.php?app_id=$1&controller=$2&id=$3&id2=$4&id3=$5 last;
            rewrite ^/api/(.*)/(.*)/(.*)/(.*) /api/index.php?app_id=$1&controller=$2&id=$3&id2=$4 last;
            rewrite ^/api/(.*)/(.*)/(.*) /api/index.php?app_id=$1&controller=$2&id=$3 last;
            rewrite ^/api/(.*)/(.*) /api/index.php?app_id=$1&controller=$2 last;
            rewrite ^/api/(.*) /api/index.php?app_id=$1 last;
        }

        location /css {
            try_files $uri $uri/ =404;
        }
        location /js {
            try_files $uri $uri/ =404;
        }

        # php - fpm
        # rewrite for pod to pod connection
        location ~ \.php$ {
            fastcgi_pass   localhost:9000;
            fastcgi_index  index.php;
            try_files      $uri $uri/ index.php = 404;
            fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param  PATH_INFO $fastcgi_path_info;
            include        fastcgi_params;
        }
    }
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: phpipam-env
  namespace: phpipam
data:
  net.phpipam.mysql.password: phpipamadmin
  net.phpipam.mysql.hostname: 127.0.0.1
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: phpipam-pv
  labels:
    type: local
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: manual
  hostPath:
    path: "/root/phpipam"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: phpipam-pv-claim
  namespace: phpipam
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: phpipam-rs
  namespace: phpipam
  labels:
    net.phpipam.service: phpipam-rs
spec:
  replicas: 1
  selector:
    matchLabels:
      net.phpipam.service: phpipam-app
  template:
    metadata:
      labels:
        net.phpipam.service: phpipam-app
    spec:
      initContainers:
      - image: networkmgmt/phpipam:1.3
        name: phpipam-preload
        command: ["cp"]
        args: ["-rfvP","/var/www/html","/usr/share/dist"]
        volumeMounts:
          - mountPath: /usr/share/dist/html
            subPath: html
            name: nginx-html
      containers:
      - image: networkmgmt/phpipam:1.3
        name: phpipam-app
        ports:
        - containerPort: 9000
        volumeMounts:
        - mountPath: /var/www/html
          subPath: html
          name: nginx-html
        env:
        - name: PHPIPAM_MYSQL_HOST
          valueFrom:
            configMapKeyRef:
              name: phpipam-env
              key: net.phpipam.mysql.hostname
        - name: PHPIPAM_MYSQL_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: phpipam-env
              key: net.phpipam.mysql.password
      - image: mariadb:10.2
        name: phpipam-db
        ports:
        - containerPort: 3306
        volumeMounts:
        - mountPath: /var/lib/mysql
          subPath: mysql
          name: mysql-data
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: phpipam-env
              key: net.phpipam.mysql.password
      - image: nginx:1.13-alpine
        name: phpipam-nginx
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /var/www/html
          subPath: html
          name: nginx-html
        - mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
          name: nginx-conf
          readOnly: true
      volumes:
      - name: nginx-html
        emptyDir: {}
      - name: nginx-conf
        configMap:
          name: phpipam-nginx-conf
      - name: mysql-data
        persistentVolumeClaim:
          claimName: phpipam-pv-claim
---
kind: Service
apiVersion: v1
metadata:
  labels:
    net.phpipam.service: phpipam-svc
  name: phpipam-svc
  namespace: phpipam
spec:
  ports:
  - port: 8080
    targetPort: 80
  selector:
    net.phpipam.service: phpipam-app
---
kind: Ingress
apiVersion: extensions/v1beta1
metadata:
  name: phpipam-ingress
  namespace: phpipam
spec:
  rules:
  - host: ipam.example.com
    http:
      paths:
      - path: /
        backend:
          serviceName: phpipam-svc
          servicePort: 8080
